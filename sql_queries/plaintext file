1) 52 Weeks of Sales History: select count of orders grouped by week.
    (count_of_each_week.sql)
    SELECT
        CEIL(order_date / 7) AS week_number,
        COUNT(*) AS order_count
    FROM orders
    GROUP BY CEIL(order_date / 7)
    ORDER BY week_number;

2) Realistic Sales History: select count of orders, sum of order total grouped by hour.
    (sales_history_by_hour.sql)
    SELECT
        hours,
        COUNT(*) AS order_count,
        SUM(total_cost) AS total_order_amount
    FROM orders
    GROUP BY hours
    ORDER BY hours;

3) 2 Peak Days: select top 10 sums of order total grouped by day in descending order.
    (top_10.sql)
    SELECT
        order_date,
        SUM(total_cost) AS total_order_amount
    FROM orders
    GROUP BY order_date
    ORDER BY total_order_amount DESC
    LIMIT 10;

4) 20 Items in Inventory: select row count from inventory.
    "20 items in inventory"
    (inventory.sql)
    SELECT count(id) FROM items

5) "all inventory items with less than 100 units remaining"
(less_than_100.sql)
SELECT item_name, inventory_count FROM items WHERE inventory_count < 100;

6) "grab all items that end with tea"
    (tea_items.sql)
    select * from items where item_name like '%Tea';
7) "grab anything that is a latte or lulu"
    (latte_or_lulu_items.sql)
    select * from items where item_name like '%Latte' or item_name like '%Lulu';
8) "grabs items with lowest inventory"
    (low_inventory_items.sql)
    select * from items order by inventory_count;

9) "all orders under twenty dollars"
(orders_under_twenty.sql)
SELECT customer_name, total_cost FROM orders WHERE total_cost < 20.00;

10) "sales by customer"
    (sales_by_customer.sql)
    SELECT customer_name, SUM(total_cost) AS total_sales
    FROM orders
    GROUP BY customer_name;

11) "grab the top ten expensive orders"
    (most_expensive_orders.sql)
    select * from orders order by total_cost desc limit 10;

12) "grab the top 5 most expensive orders from day 150"
    "most_expensive_order_from_day.sql"
    select * from orders where order_date = 150 order by total_cost limit 5;

13) "all orders from day 200"
(day_200_orders.sql)
SELECT customer_name, total_cost FROM orders WHERE order_date = 200;

14) "average order value"
    (avg_order_value.sql)
    SELECT AVG(total_cost) AS avg_order_value
    FROM orders;
    items in stock:


15) "gets the most popular hours by total revenue"
    (total_revenue_in_each_hour.sql)
    SELECT hours, SUM(total_cost) AS total_sales
    FROM orders
    GROUP BY hours;

16) "gets the most popular hours of the day by customers"
    (most_popular_hour_by_customers.sql)
    select hours from orders group by hours order by count(*) desc limit 5;
